searchState.loadedDescShard("iocuddle", 0, "<code>iocuddle</code> is a library for building runtime-safe <code>ioctl()</code> …\nA collection of related <code>ioctl</code>s\nA defined <code>ioctl</code> along with its associated <code>direction</code> and …\nA marker for the read direction\nA marker for the write direction\nA marker for the write/read direction\nDefine a new <code>ioctl</code> with an associated <code>direction</code> and <code>type</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIssue an <code>ioctl</code> to modify a file descriptor\nIssue an <code>ioctl</code> to read a file descriptor’s metadata as …\nIssue an <code>ioctl</code> to read a file descriptor’s metadata as …\nIssue an <code>ioctl</code> to modify a file descriptor\nIssue an <code>ioctl</code> to modify a file descriptor and read its …\nIssue an <code>ioctl</code> to modify a file descriptor\nLie about the ioctl direction or type\nCreate a new group for related <code>ioctl</code>s from its allocated …\nDefine a new <code>Read</code> <code>ioctl</code> with an associated <code>type</code>\nDefine a new <code>Write</code> <code>ioctl</code> with an associated <code>type</code>\nDefine a new <code>WriteRead</code> <code>ioctl</code> with an associated <code>type</code>")