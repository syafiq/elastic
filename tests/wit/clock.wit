package elastic:clock@0.1.0;

interface types {
    // Error types
    variant clock-error {
        system-time-error(string),
        timezone-error(string),
        monotonic-clock-error(string)
    }
}

interface clock {
    use types.{clock-error};

    // Main clock interface
    // Read current time as seconds since UNIX epoch
    read-current-time: func() -> result<u64, clock-error>;
    
    // Read current timezone
    read-timezone: func() -> result<string, clock-error>;
    
    // Start monotonic clock measurement
    start-monotonic: func() -> result<_, clock-error>;
    
    // Stop monotonic clock and return elapsed time in milliseconds
    stop-monotonic: func() -> result<u64, clock-error>;
    
    // Read elapsed time from monotonic clock in milliseconds without stopping it
    read-monotonic: func() -> result<u64, clock-error>;
}

world clock-impl {
    export clock;
} 